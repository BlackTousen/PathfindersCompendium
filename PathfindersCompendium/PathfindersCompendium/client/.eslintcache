[{"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\index.js":"1","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\App.js":"2","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\AppHeader.js":"5","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\HomePage\\HomePageManager.js":"6","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\providers\\UserProfileProvider.js":"7","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Login.js":"8","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Register.js":"9","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Attributes.js":"10","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\CharacterSheet.js":"11","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Skills.js":"12","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Defense.js":"13","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Offense.js":"14","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\InformationViews.js":"15","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\AC.js":"16","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\providers\\InformationDataProvider.js":"17","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Feats.js":"18","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Spells.js":"19"},{"size":648,"mtime":1611953532484,"results":"20","hashOfConfig":"21"},{"size":1326,"mtime":1613060587251,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":806,"mtime":1611953729976,"results":"24","hashOfConfig":"21"},{"size":2208,"mtime":1611954557064,"results":"25","hashOfConfig":"21"},{"size":4004,"mtime":1613065733333,"results":"26","hashOfConfig":"21"},{"size":3198,"mtime":1611951656420,"results":"27","hashOfConfig":"21"},{"size":2328,"mtime":1612899826024,"results":"28","hashOfConfig":"21"},{"size":3893,"mtime":1611951729693,"results":"29","hashOfConfig":"21"},{"size":3383,"mtime":1613059193217,"results":"30","hashOfConfig":"21"},{"size":14072,"mtime":1613066362084,"results":"31","hashOfConfig":"21"},{"size":3762,"mtime":1613059218841,"results":"32","hashOfConfig":"21"},{"size":3951,"mtime":1613061756625,"results":"33","hashOfConfig":"21"},{"size":5010,"mtime":1613066362082,"results":"34","hashOfConfig":"21"},{"size":794,"mtime":1612899793467,"results":"35","hashOfConfig":"21"},{"size":43812,"mtime":1613066104433,"results":"36","hashOfConfig":"21"},{"size":416,"mtime":1612560630299,"results":"37","hashOfConfig":"21"},{"size":4328,"mtime":1613060414319,"results":"38","hashOfConfig":"21"},{"size":4669,"mtime":1613060489720,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1jlz9gr",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"42"},"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\index.js",[],["90","91"],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\App.js",["92"],"import { BrowserRouter as Router } from \"react-router-dom\";\nimport ApplicationViews from \"./components/ApplicationViews\";\nimport { UserProfileProvider } from \"./providers/UserProfileProvider\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AppHeader from \"./components/AppHeader\";\nimport SplitPane, { Pane } from \"react-split-pane\";\nimport InformationViews from \"./components/InformationViews\";\nimport { InformationDataProvider } from \"./providers/InformationDataProvider\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <InformationDataProvider>\n        <UserProfileProvider>\n          <Router>\n            <AppHeader />\n            <SplitPane\n              style={{ overflow: \"auto\" }}\n              split=\"vertical\"\n              minSize={50}\n              defaultSize=\"75%\"\n              onChange={(size) => localStorage.setItem(\"splitPos\", size)}\n            >\n              <div>\n                <ApplicationViews />\n              </div>\n              <div>\n                <InformationViews />\n              </div>\n            </SplitPane>\n          </Router>\n        </UserProfileProvider>\n      </InformationDataProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\ApplicationViews.js",["93"],"import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport HomePageManager from \"../HomePage/HomePageManager\";\r\nimport Login from \"../Pages/Login\";\r\nimport Register from \"../Pages/Register\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst ApplicationViews = () => {\r\n  const { isLoggedIn } = useContext(UserProfileContext);\r\n  const { isAdmin } = useContext(UserProfileContext);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        {isLoggedIn ? <HomePageManager /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ApplicationViews;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\AppHeader.js",["94"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Collapse,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarText,\r\n  NavbarToggler,\r\n  NavItem,\r\n} from \"reactstrap\";\r\n\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst AppHeader = () => {\r\n  const { getCurrentUser, logout, isAdmin } = useContext(UserProfileContext);\r\n  const user = getCurrentUser();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutAndReturn = () => {\r\n    return logout().then(() => {\r\n      toast.dark(\"You are now logged out\");\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          <img\r\n            id=\"header-logo\"\r\n            src=\"/quill.png\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"mr-1\"\r\n            alt=\"Quill Logo\"\r\n          />\r\n          PF Compendium\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {user ? (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink tag={Link} to=\"/\" onClick={logoutAndReturn}>\r\n                    Logout\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink to=\"/login\" tag={Link}>\r\n                    Login\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink to=\"/register\" tag={Link}>\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            )}\r\n          </Nav>\r\n          {user ? (\r\n            <NavbarText className=\"d-sm-none d-md-block\">\r\n              Welcome {user.displayName}\r\n            </NavbarText>\r\n          ) : null}\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\HomePage\\HomePageManager.js",["95"],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\providers\\UserProfileProvider.js",["96"],"import React, { useState, useEffect, createContext } from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const UserProfileContext = createContext();\r\n\r\nexport function UserProfileProvider(props) {\r\n  const apiUrl = \"/api/userprofile\";\r\n\r\n  const userProfile = localStorage.getItem(\"userProfile\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\r\n\r\n  const [isFirebaseReady, setIsFirebaseReady] = useState(false);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((u) => {\r\n      setIsFirebaseReady(true);\r\n    });\r\n  }, []);\r\n\r\n  const login = (email, pw) => {\r\n    return firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, pw)\r\n      .then((signInResponse) => getUserProfile(signInResponse.user.uid))\r\n      .then((userProfile) => {\r\n        if (userProfile.UserStatusId == 2) {\r\n          console.log(\"this account is inactive\");\r\n        }\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(userProfile));\r\n        setIsLoggedIn(true);\r\n        return userProfile;\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    return firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        localStorage.clear();\r\n        setIsLoggedIn(false);\r\n      });\r\n  };\r\n\r\n  const register = (userProfile, password) => {\r\n    return firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(userProfile.email, password)\r\n      .then((createResponse) =>\r\n        saveUser({ ...userProfile, firebaseUserId: createResponse.user.uid })\r\n      )\r\n      .then((savedUserProfile) => {\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile));\r\n        setIsLoggedIn(true);\r\n        return savedUserProfile;\r\n      });\r\n  };\r\n\r\n  const getToken = () => firebase.auth().currentUser.getIdToken();\r\n\r\n  const getUserProfile = (firebaseUserId) => {\r\n    return getToken().then((token) =>\r\n      fetch(`${apiUrl}/${firebaseUserId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }).then((resp) => resp.json())\r\n    );\r\n  };\r\n\r\n  const saveUser = (userProfile) => {\r\n    return getToken().then((token) =>\r\n      fetch(apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userProfile),\r\n      }).then((resp) => resp.json())\r\n    );\r\n  };\r\n\r\n  const getCurrentUser = () => {\r\n    const user = localStorage.getItem(\"userProfile\");\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    return JSON.parse(user);\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    const user = getCurrentUser();\r\n    const adminTypeId = 1;\r\n    return user !== null && user.userTypeId === adminTypeId;\r\n  };\r\n\r\n  return (\r\n    <UserProfileContext.Provider\r\n      value={{\r\n        isLoggedIn,\r\n        login,\r\n        logout,\r\n        register,\r\n        getToken,\r\n        getCurrentUser,\r\n        isAdmin,\r\n      }}\r\n    >\r\n      {isFirebaseReady ? (\r\n        props.children\r\n      ) : (\r\n        <Spinner className=\"app-spinner dark\" />\r\n      )}\r\n    </UserProfileContext.Provider>\r\n  );\r\n}\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Login.js",["97"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  const { login, logout } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    login(email, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        user.userStatusId == 2\r\n          ? toast.info(\"That account in inactive\", logout())\r\n          : toast.info(`Welcome back ${user.displayName}`, history.push(\"/\"));\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(\"Invalid email or password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"avatar bg-primary\">\r\n          <img src=\"/quill.png\" alt=\"Avatar\" />\r\n        </div>\r\n        <h2 className=\"text-center\">User Login</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n            Sign in\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Don't have an account?\r\n          <div>\r\n            <Link to=\"/register\">Sign up here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Register.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Attributes.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\CharacterSheet.js",["98","99"],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Skills.js",["100","101"],"import React, { useContext, useState } from \"react\";\r\nimport { Col, Input, Label, Row } from \"reactstrap\";\r\nimport { InformationDataContext } from \"../providers/InformationDataProvider\";\r\n\r\nconst Skills = ({ skill, handleChange, newSheet }) => {\r\n  const { setToggle } = useContext(InformationDataContext);\r\n\r\n  const [tempMods, setTempMods] = useState({\r\n    str: 0,\r\n    dex: 0,\r\n    con: 0,\r\n    int: 0,\r\n    wis: 0,\r\n    cha: 0,\r\n  });\r\n  const getName = (s) => {\r\n    if (s === \"Knowledge(Arcana)\") {\r\n      return \"knowledgeArcana\";\r\n    }\r\n    if (s === \"Knowledge(Dungeoneering)\") {\r\n      return \"knowledgeDungeoneering\";\r\n    }\r\n    if (s === \"Knowledge(Engineering)\") {\r\n      return \"knowledgeEngineering\";\r\n    }\r\n    if (s === \"Knowledge(Geography)\") {\r\n      return \"knowledgeGeography\";\r\n    }\r\n    if (s === \"Knowledge(History)\") {\r\n      return \"knowledgeHistory\";\r\n    }\r\n    if (s === \"Knowledge(Local)\") {\r\n      return \"knowledgeLocal\";\r\n    }\r\n    if (s === \"Knowledge(Nature)\") {\r\n      return \"knowledgeNature\";\r\n    }\r\n    if (s === \"Knowledge(Nobility)\") {\r\n      return \"knowledgeNobility\";\r\n    }\r\n    if (s === \"Knowledge(Planes)\") {\r\n      return \"knowledgePlanes\";\r\n    }\r\n    if (s === \"Knowledge(Religion)\") {\r\n      return \"knowledgeReligion\";\r\n    }\r\n    let string = s.replace(/\\s+/g, \"\");\r\n    return string[0].toLowerCase() + string.slice(1);\r\n  };\r\n\r\n  const skillMath = (skill1, temp = 0) => {\r\n    let result = newSheet[getName(skill1)]\r\n      ? parseInt(newSheet[getName(skill1)])\r\n      : 0;\r\n    if ([\"Climb\", \"Swim\"].includes(skill1)) {\r\n      result += parseInt(newSheet.strMod);\r\n      return result;\r\n    }\r\n    if (\r\n      [\"Profession\", \"Survival\", \"Perception\", \"Heal\", \"Sense Motive\"].includes(\r\n        skill1\r\n      )\r\n    ) {\r\n      result += parseInt(newSheet.wisMod);\r\n      return result;\r\n    }\r\n    if (\r\n      [\r\n        \"Use Magic Device\",\r\n        \"Perform\",\r\n        \"Intimidate\",\r\n        \"Handle Animal\",\r\n        \"Bluff\",\r\n        \"Disguise\",\r\n        \"Diplomacy\",\r\n      ].includes(skill1)\r\n    ) {\r\n      result += parseInt(newSheet.chaMod);\r\n      return result;\r\n    }\r\n    if (\r\n      [\r\n        \"Appraise\",\r\n        \"Craft\",\r\n        \"Knowledge(Arcana)\",\r\n        \"Knowledge(Dungeoneering)\",\r\n        \"Knowledge(Engineering)\",\r\n        \"Knowledge(Geography)\",\r\n        \"Knowledge(History)\",\r\n        \"Knowledge(Local)\",\r\n        \"Knowledge(Nature)\",\r\n        \"Knowledge(Planes)\",\r\n        \"Knowledge(Religion)\",\r\n        \"Knowledge(Nobility)\",\r\n        \"Spellcraft\",\r\n        \"Linguistics\",\r\n      ].includes(skill1)\r\n    ) {\r\n      result += parseInt(newSheet.intMod);\r\n      return result;\r\n    }\r\n    if (\r\n      [\r\n        \"Acrobatics\",\r\n        \"Disable Device\",\r\n        \"Escape Artist\",\r\n        \"Fly\",\r\n        \"Ride\",\r\n        \"Sleight Of Hand\",\r\n        \"Stealth\",\r\n      ].includes(skill1)\r\n    ) {\r\n      result += parseInt(newSheet.dexMod);\r\n\r\n      return result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col\r\n      // md={{ offset: 2 }}\r\n      >\r\n        <Row style={{ textAlign: \"left\" }}>\r\n          <Label\r\n            size=\"sm\"\r\n            md={2}\r\n            for={skill}\r\n            onClick={(e) => setToggle(getName(skill))}\r\n          >\r\n            {skill}\r\n          </Label>{\" \"}\r\n          <Col size=\"sm\" md={{ size: 2, offset: 2 }}>\r\n            <Input\r\n              id={skill}\r\n              name={getName(skill)}\r\n              defaultValue={newSheet[getName(skill)]}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Col>\r\n          <Col size=\"sm\" sm={2}>\r\n            <Input readOnly value={skillMath(skill)} />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\nexport default Skills;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Defense.js",["102"],"import React, { useContext, useState } from \"react\";\r\nimport { Col, Input, Label, Row } from \"reactstrap\";\r\nimport { InformationDataContext } from \"../providers/InformationDataProvider\";\r\n\r\nconst Defense = ({ handleChange, newSheet }) => {\r\n  const { setToggle } = useContext(InformationDataContext);\r\n  const CalcAC = (num) => {\r\n    const stat = isNaN(num) ? 0 : parseInt(num);\r\n    return 10 + stat;\r\n  };\r\n  const CalcSave = (save, mod) => {\r\n    let save1 = isNaN(save) ? 0 : parseInt(save);\r\n    let mod1 = isNaN(mod) ? 0 : parseInt(mod);\r\n    return mod1 + save1;\r\n  };\r\n  return (\r\n    <>\r\n      <Col sm={{ offset: 2 }}>\r\n        <Row style={{ textAlign: \"right\" }}>\r\n          <Label\r\n            size=\"sm\"\r\n            md={{ size: 2, textAlign: \"left\" }}\r\n            onClick={(e) => setToggle(\"AC\")}\r\n          >\r\n            AC\r\n          </Label>\r\n          <Col size=\"sm\" sm={1} style={{ textAlign: \"left\" }}>\r\n            <Input readOnly value={CalcAC(parseInt(newSheet.ac))} />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              // type=\"number\"\r\n              defaultValue={0}\r\n              name=\"ac\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Col>\r\n          <Label size=\"sm\" md={2} for=\"touchAC\">\r\n            Touch\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              name=\"touchAC\"\r\n              value={CalcAC(parseInt(newSheet.dexMod))}\r\n            />\r\n          </Col>\r\n          <Label size=\"sm\" md={2} for=\"flatFootAC\">\r\n            Flat-Footed\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              name=\"flatFootAC\"\r\n              value={CalcAC(parseInt(newSheet.ac))}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ textAlign: \"right\" }}>\r\n          <Label\r\n            size=\"sm\"\r\n            md={2}\r\n            for=\"fortSave\"\r\n            onClick={(e) => setToggle(\"SavingThrows\")}\r\n          >\r\n            Fortitude\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              name=\"fortSave\"\r\n              defaultValue={newSheet.fortSave}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              value={CalcSave(\r\n                parseInt(newSheet.fortSave),\r\n                parseInt(newSheet.conMod)\r\n              )}\r\n            />\r\n          </Col>\r\n          <Label\r\n            size=\"sm\"\r\n            md={2}\r\n            for=\"refSave\"\r\n            onClick={(e) => setToggle(\"SavingThrows\")}\r\n          >\r\n            Reflex\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              name=\"refSave\"\r\n              defaultValue={newSheet.refSave}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              value={CalcSave(\r\n                parseInt(newSheet.refSave),\r\n                parseInt(newSheet.dexMod)\r\n              )}\r\n            />\r\n          </Col>\r\n          <Label\r\n            size=\"sm\"\r\n            md={2}\r\n            for=\"willSave\"\r\n            onClick={(e) => setToggle(\"SavingThrows\")}\r\n          >\r\n            Will\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              defaultValue={newSheet.willSave}\r\n              name=\"willSave\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              value={CalcSave(\r\n                parseInt(newSheet.willSave),\r\n                parseInt(newSheet.wisMod)\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\nexport default Defense;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Offense.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\InformationViews.js",["103","104","105","106"],"import React, { useContext, useState } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { InformationDataContext } from \"../providers/InformationDataProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Information from \"./AC\";\r\n\r\nconst InformationViews = () => {\r\n  const { isLoggedIn } = useContext(UserProfileContext);\r\n  const { isAdmin } = useContext(UserProfileContext);\r\n  const [dataArray, setDataArray] = useState(Information);\r\n  const { setToggle } = useContext(InformationDataContext);\r\n  const { toggle } = useContext(InformationDataContext);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div style={{ textAlign: \"left\" }}>{dataArray[toggle]}</div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InformationViews;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\AC.js",["107"],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\providers\\InformationDataProvider.js",["108","109"],"import React, { useState, useEffect, createContext } from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nexport const InformationDataContext = createContext();\r\n\r\nexport function InformationDataProvider(props) {\r\n  const [toggle, setToggle] = useState(\"\");\r\n  return (\r\n    <InformationDataContext.Provider value={{ toggle, setToggle }}>\r\n      {props.children}\r\n    </InformationDataContext.Provider>\r\n  );\r\n}\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Feats.js",["110","111","112","113","114","115","116","117"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Input,\r\n  Label,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  ModalFooter,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { InformationDataContext } from \"../providers/InformationDataProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Information from \"./AC\";\r\nconst Feats = ({ newSheet, handleChange }) => {\r\n  const { getToken } = useContext(UserProfileContext);\r\n\r\n  const { setToggle } = useContext(InformationDataContext);\r\n  const [feats, setFeats] = useState([]);\r\n  const [userFeats, setUserFeats] = useState([]);\r\n  const [featToAdd, setFeat] = useState(0);\r\n\r\n  useEffect(() => {\r\n    GetFeats();\r\n    GetSheetFeats();\r\n  }, []);\r\n  useEffect(() => {}, [userFeats]);\r\n\r\n  const GetSheetFeats = (_) => {\r\n    return getToken().then((token) =>\r\n      fetch(`/api/featsheet/${newSheet.id}`)\r\n        .then((res) => res.json())\r\n        .then(setUserFeats)\r\n    );\r\n  };\r\n  const getName = (s) => {\r\n    let string = s.replace(/\\s+/g, \"\");\r\n    return string[0].toLowerCase() + string.slice(1);\r\n  };\r\n  const GetFeats = (_) => {\r\n    return fetch(\"/api/feat\")\r\n      .then((res) => res.json())\r\n      .then(setFeats);\r\n  };\r\n  const AddToSheet = (id) => {\r\n    if (id === 0) {\r\n      return;\r\n    }\r\n    return getToken().then((token) =>\r\n      fetch(`/api/featsheet`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ sheetId: newSheet.id, featId: id }),\r\n      })\r\n    );\r\n  };\r\n  const RemoveFromSheet = (userFeat) => {\r\n    if (userFeat.id === 0) {\r\n      return;\r\n    }\r\n    return getToken().then((token) =>\r\n      fetch(`/api/featsheet/${userFeat.id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  while (feats[0] === undefined) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      <Input\r\n        type=\"select\"\r\n        onChange={(e) => {\r\n          setFeat(e.target.value);\r\n          setToggle(getName(e.target.options[e.target.selectedIndex].text));\r\n        }}\r\n      >\r\n        <option selected={0 == featToAdd} hidden>\r\n          Please select a feat.\r\n        </option>\r\n        {feats.map((feat) => {\r\n          Information[getName(`${feat.name} (${feat.type})`)] = (\r\n            <>\r\n              <p>\r\n                <b>\r\n                  {feat.name} ({feat.type})\r\n                </b>\r\n              </p>\r\n              <p>\r\n                <i>{feat.description}</i>\r\n              </p>\r\n              <p>\r\n                {feat.prerequisites != null ? (\r\n                  <p>Prerequisites: {feat.prerequisites}</p>\r\n                ) : null}\r\n              </p>\r\n              <p>\r\n                {feat.benefit != null ? <p>Benefit: {feat.benefit}</p> : null}\r\n              </p>\r\n              <p>\r\n                {feat.normal != null ? <p>Normal: {feat.normal} </p> : null}\r\n              </p>\r\n            </>\r\n          );\r\n          return (\r\n            <option selected={feat.id == featToAdd} value={feat.id}>\r\n              {feat.name} ({feat.type})\r\n            </option>\r\n          );\r\n        })}\r\n      </Input>\r\n      <br></br>\r\n      <Button\r\n        color=\"success\"\r\n        onClick={(e) => AddToSheet(featToAdd).then(GetSheetFeats)}\r\n      >\r\n        Add To Sheet\r\n      </Button>\r\n      <Container>\r\n        <ListGroup>\r\n          {userFeats.map((uf) => (\r\n            <>\r\n              <span>\r\n                <ListGroupItemHeading\r\n                  onClick={(e) =>\r\n                    setToggle(getName(`${uf.feat.name} (${uf.feat.type})`))\r\n                  }\r\n                >\r\n                  {uf.feat.name} ({uf.feat.type}){\" \"}\r\n                  <Button\r\n                    onClick={(e) => RemoveFromSheet(uf).then(GetSheetFeats)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </ListGroupItemHeading>\r\n                <ListGroupItemText>{uf.feat.benefit}</ListGroupItemText>\r\n              </span>\r\n            </>\r\n          ))}\r\n        </ListGroup>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Feats;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Spells.js",["118","119","120","121","122","123","124"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Label,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  ModalFooter,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { InformationDataContext } from \"../providers/InformationDataProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Information from \"./AC\";\r\n\r\nconst Spells = ({ newSheet, handleChange }) => {\r\n  const { getToken } = useContext(UserProfileContext);\r\n  const { setToggle } = useContext(InformationDataContext);\r\n  const [spells, setSpells] = useState([]);\r\n  const [userSpells, setUserSpells] = useState([]);\r\n  const [spellToAdd, setSpell] = useState(0);\r\n\r\n  useEffect(() => {\r\n    GetSpells();\r\n    GetSheetSpells();\r\n  }, []);\r\n  useEffect(() => {}, [userSpells]);\r\n  const GetSheetSpells = (_) => {\r\n    return getToken().then((token) =>\r\n      fetch(`/api/spellsheet/${newSheet.id}`)\r\n        .then((res) => res.json())\r\n        .then(setUserSpells)\r\n    );\r\n  };\r\n  const getName = (s) => {\r\n    let string = s.replace(/\\s+/g, \"\");\r\n    return string[0].toLowerCase() + string.slice(1);\r\n  };\r\n  const GetSpells = (_) => {\r\n    return fetch(\"/api/spell\")\r\n      .then((res) => res.json())\r\n      .then(setSpells);\r\n  };\r\n  const AddToSheet = (id) => {\r\n    if (id === 0) {\r\n      return;\r\n    }\r\n    return getToken().then((token) =>\r\n      fetch(`/api/spellsheet`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ sheetId: newSheet.id, spellId: id }),\r\n      })\r\n    );\r\n  };\r\n  const RemoveFromSheet = (userSpell) => {\r\n    if (userSpell.id === 0) {\r\n      return;\r\n    }\r\n    return getToken().then((token) =>\r\n      fetch(`/api/spellsheet/${userSpell.id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  while (spells[0] === undefined) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      <Input\r\n        type=\"select\"\r\n        onChange={(e) => {\r\n          setSpell(e.target.value);\r\n          setToggle(getName(e.target.options[e.target.selectedIndex].text));\r\n        }}\r\n      >\r\n        <option selected={0 == spellToAdd} hidden>\r\n          Please select a spell.\r\n        </option>\r\n        {spells.map((spell) => {\r\n          Information[getName(spell.name)] = (\r\n            <>\r\n              <p>\r\n                <b>{spell.name}</b>\r\n              </p>\r\n              <p>\r\n                School: {spell.school} Level:{\" \"}\r\n                {spell.bard !== \"NULL\" ? \"Bard: \" + spell.bard : null}{\" \"}\r\n                {spell.cleric !== \"NULL\" ? \"Cleric: \" + spell.cleric : null}{\" \"}\r\n                {spell.druid !== \"NULL\" ? \"Druid: \" + spell.druid : null}{\" \"}\r\n                {spell.magus !== \"NULL\" ? \"Magus: \" + spell.magus : null}{\" \"}\r\n                {spell.wiz !== \"NULL\" ? \"Wiz/Sor: \" + spell.wiz : null}{\" \"}\r\n                {spell.witch !== \"NULL\" ? \"Witch: \" + spell.witch : null}{\" \"}\r\n              </p>\r\n              <p>\r\n                <i>{spell.description}</i>\r\n              </p>\r\n              <p>\r\n                {spell.prerequisites != null ? (\r\n                  <p>Prerequisites: {spell.prerequisites}</p>\r\n                ) : null}\r\n              </p>\r\n              <p>\r\n                {spell.benefit != null ? <p>Benefit: {spell.benefit}</p> : null}\r\n              </p>\r\n              <p>\r\n                {spell.normal != null ? <p>Normal: {spell.normal} </p> : null}\r\n              </p>\r\n            </>\r\n          );\r\n          return (\r\n            <option selected={spell.id == spellToAdd} value={spell.id}>\r\n              {spell.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </Input>\r\n      <br></br>\r\n      <Button\r\n        color=\"success\"\r\n        onClick={(e) => AddToSheet(spellToAdd).then(GetSheetSpells)}\r\n      >\r\n        Add To Sheet\r\n      </Button>{\" \"}\r\n      <ListGroup>\r\n        <Row>\r\n          {userSpells.map((uf) => (\r\n            <>\r\n              <Col md={2}>\r\n                <ListGroupItem\r\n                  onClick={(e) => setToggle(getName(uf.spell.name))}\r\n                >\r\n                  {uf.spell.name}\r\n                  <Button\r\n                    onClick={(e) => RemoveFromSheet(uf).then(GetSheetSpells)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </ListGroupItem>\r\n              </Col>\r\n            </>\r\n          ))}\r\n        </Row>\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spells;\r\n",{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":8,"column":21,"nodeType":"131","messageId":"132","endLine":8,"endColumn":25},{"ruleId":"129","severity":1,"message":"133","line":10,"column":11,"nodeType":"131","messageId":"132","endLine":10,"endColumn":18},{"ruleId":"129","severity":1,"message":"133","line":17,"column":35,"nodeType":"131","messageId":"132","endLine":17,"endColumn":42},{"ruleId":"134","severity":1,"message":"135","line":23,"column":6,"nodeType":"136","endLine":23,"endColumn":8,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":27,"column":38,"nodeType":"140","messageId":"141","endLine":27,"endColumn":40},{"ruleId":"138","severity":1,"message":"139","line":22,"column":27,"nodeType":"140","messageId":"141","endLine":22,"endColumn":29},{"ruleId":"129","severity":1,"message":"142","line":12,"column":3,"nodeType":"131","messageId":"132","endLine":12,"endColumn":16},{"ruleId":"129","severity":1,"message":"143","line":30,"column":11,"nodeType":"131","messageId":"132","endLine":30,"endColumn":25},{"ruleId":"129","severity":1,"message":"144","line":8,"column":10,"nodeType":"131","messageId":"132","endLine":8,"endColumn":18},{"ruleId":"129","severity":1,"message":"145","line":8,"column":20,"nodeType":"131","messageId":"132","endLine":8,"endColumn":31},{"ruleId":"129","severity":1,"message":"146","line":1,"column":29,"nodeType":"131","messageId":"132","endLine":1,"endColumn":37},{"ruleId":"129","severity":1,"message":"147","line":8,"column":11,"nodeType":"131","messageId":"132","endLine":8,"endColumn":21},{"ruleId":"129","severity":1,"message":"133","line":9,"column":11,"nodeType":"131","messageId":"132","endLine":9,"endColumn":18},{"ruleId":"129","severity":1,"message":"148","line":10,"column":21,"nodeType":"131","messageId":"132","endLine":10,"endColumn":33},{"ruleId":"129","severity":1,"message":"149","line":11,"column":11,"nodeType":"131","messageId":"132","endLine":11,"endColumn":20},{"ruleId":"129","severity":1,"message":"150","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":32},{"ruleId":"129","severity":1,"message":"151","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"152","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":17},{"ruleId":"129","severity":1,"message":"153","line":4,"column":3,"nodeType":"131","messageId":"132","endLine":4,"endColumn":6},{"ruleId":"129","severity":1,"message":"154","line":7,"column":3,"nodeType":"131","messageId":"132","endLine":7,"endColumn":8},{"ruleId":"129","severity":1,"message":"155","line":9,"column":3,"nodeType":"131","messageId":"132","endLine":9,"endColumn":16},{"ruleId":"129","severity":1,"message":"156","line":12,"column":3,"nodeType":"131","messageId":"132","endLine":12,"endColumn":14},{"ruleId":"129","severity":1,"message":"157","line":13,"column":3,"nodeType":"131","messageId":"132","endLine":13,"endColumn":6},{"ruleId":"134","severity":1,"message":"158","line":29,"column":6,"nodeType":"136","endLine":29,"endColumn":8,"suggestions":"159"},{"ruleId":"138","severity":1,"message":"139","line":89,"column":29,"nodeType":"140","messageId":"141","endLine":89,"endColumn":31},{"ruleId":"138","severity":1,"message":"139","line":117,"column":39,"nodeType":"140","messageId":"141","endLine":117,"endColumn":41},{"ruleId":"129","severity":1,"message":"154","line":6,"column":3,"nodeType":"131","messageId":"132","endLine":6,"endColumn":8},{"ruleId":"129","severity":1,"message":"160","line":9,"column":3,"nodeType":"131","messageId":"132","endLine":9,"endColumn":23},{"ruleId":"129","severity":1,"message":"161","line":10,"column":3,"nodeType":"131","messageId":"132","endLine":10,"endColumn":20},{"ruleId":"129","severity":1,"message":"156","line":11,"column":3,"nodeType":"131","messageId":"132","endLine":11,"endColumn":14},{"ruleId":"134","severity":1,"message":"162","line":28,"column":6,"nodeType":"136","endLine":28,"endColumn":8,"suggestions":"163"},{"ruleId":"138","severity":1,"message":"139","line":87,"column":29,"nodeType":"140","messageId":"141","endLine":87,"endColumn":31},{"ruleId":"138","severity":1,"message":"139","line":122,"column":40,"nodeType":"140","messageId":"141","endLine":122,"endColumn":42},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Pane' is defined but never used.","Identifier","unusedVar","'isAdmin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ListSheets' and 'getSheets'. Either include them or remove the dependency array.","ArrayExpression",["166"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NavbarToggler' is defined but never used.","'getCurrentUser' is assigned a value but never used.","'tempMods' is assigned a value but never used.","'setTempMods' is assigned a value but never used.","'useState' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'setDataArray' is assigned a value but never used.","'setToggle' is assigned a value but never used.","'InformationDataContext' is defined but never used.","'useEffect' is defined but never used.","'Spinner' is defined but never used.","'Col' is defined but never used.","'Label' is defined but never used.","'ListGroupItem' is defined but never used.","'ModalFooter' is defined but never used.","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'GetSheetFeats'. Either include it or remove the dependency array.",["167"],"'ListGroupItemHeading' is defined but never used.","'ListGroupItemText' is defined but never used.","React Hook useEffect has a missing dependency: 'GetSheetSpells'. Either include it or remove the dependency array.",["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [ListSheets, getSheets]",{"range":"175","text":"176"},"Update the dependencies array to be: [GetSheetFeats]",{"range":"177","text":"178"},"Update the dependencies array to be: [GetSheetSpells]",{"range":"179","text":"180"},[852,854],"[ListSheets, getSheets]",[812,814],"[GetSheetFeats]",[807,809],"[GetSheetSpells]"]
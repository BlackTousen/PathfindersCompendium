[{"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\index.js":"1","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\App.js":"2","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\AppHeader.js":"5","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\HomePage\\HomePageManager.js":"6","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\providers\\UserProfileProvider.js":"7","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Login.js":"8","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Register.js":"9","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Attributes.js":"10","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\CharacterSheet.js":"11","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Skills.js":"12","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Defense.js":"13","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Offense.js":"14","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\InformationViews.js":"15","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\AC.js":"16","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\providers\\InformationDataProvider.js":"17","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Feats.js":"18","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Spells.js":"19"},{"size":648,"mtime":1611953532484,"results":"20","hashOfConfig":"21"},{"size":1326,"mtime":1612619813820,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":806,"mtime":1611953729976,"results":"24","hashOfConfig":"21"},{"size":2208,"mtime":1611954557064,"results":"25","hashOfConfig":"21"},{"size":3934,"mtime":1612618044513,"results":"26","hashOfConfig":"21"},{"size":3198,"mtime":1611951656420,"results":"27","hashOfConfig":"21"},{"size":2367,"mtime":1611953775672,"results":"28","hashOfConfig":"21"},{"size":3893,"mtime":1611951729693,"results":"29","hashOfConfig":"21"},{"size":3413,"mtime":1612618451054,"results":"30","hashOfConfig":"21"},{"size":13502,"mtime":1612718421577,"results":"31","hashOfConfig":"21"},{"size":4649,"mtime":1612561039262,"results":"32","hashOfConfig":"21"},{"size":3427,"mtime":1612561096417,"results":"33","hashOfConfig":"21"},{"size":4845,"mtime":1612670475347,"results":"34","hashOfConfig":"21"},{"size":836,"mtime":1612672184011,"results":"35","hashOfConfig":"21"},{"size":12418,"mtime":1612619604233,"results":"36","hashOfConfig":"21"},{"size":416,"mtime":1612560630299,"results":"37","hashOfConfig":"21"},{"size":3215,"mtime":1612673037122,"results":"38","hashOfConfig":"21"},{"size":3736,"mtime":1612720811144,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1jlz9gr",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\index.js",[],["89","90"],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\App.js",["91"],"import { BrowserRouter as Router } from \"react-router-dom\";\nimport ApplicationViews from \"./components/ApplicationViews\";\nimport { UserProfileProvider } from \"./providers/UserProfileProvider\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AppHeader from \"./components/AppHeader\";\nimport SplitPane, { Pane } from \"react-split-pane\";\nimport InformationViews from \"./components/InformationViews\";\nimport { InformationDataProvider } from \"./providers/InformationDataProvider\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <InformationDataProvider>\n        <UserProfileProvider>\n          <Router>\n            <AppHeader />\n            <SplitPane\n              style={{ overflow: \"auto\" }}\n              split=\"vertical\"\n              minSize={50}\n              defaultSize=\"75%\"\n              onChange={(size) => localStorage.setItem(\"splitPos\", size)}\n            >\n              <div>\n                <ApplicationViews />\n              </div>\n              <div>\n                <InformationViews />\n              </div>\n            </SplitPane>\n          </Router>\n        </UserProfileProvider>\n      </InformationDataProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\ApplicationViews.js",["92"],"import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport HomePageManager from \"../HomePage/HomePageManager\";\r\nimport Login from \"../Pages/Login\";\r\nimport Register from \"../Pages/Register\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst ApplicationViews = () => {\r\n  const { isLoggedIn } = useContext(UserProfileContext);\r\n  const { isAdmin } = useContext(UserProfileContext);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        {isLoggedIn ? <HomePageManager /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ApplicationViews;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\AppHeader.js",["93"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Collapse,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarText,\r\n  NavbarToggler,\r\n  NavItem,\r\n} from \"reactstrap\";\r\n\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst AppHeader = () => {\r\n  const { getCurrentUser, logout, isAdmin } = useContext(UserProfileContext);\r\n  const user = getCurrentUser();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutAndReturn = () => {\r\n    return logout().then(() => {\r\n      toast.dark(\"You are now logged out\");\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          <img\r\n            id=\"header-logo\"\r\n            src=\"/quill.png\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"mr-1\"\r\n            alt=\"Quill Logo\"\r\n          />\r\n          PF Compendium\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {user ? (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink tag={Link} to=\"/\" onClick={logoutAndReturn}>\r\n                    Logout\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink to=\"/login\" tag={Link}>\r\n                    Login\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink to=\"/register\" tag={Link}>\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            )}\r\n          </Nav>\r\n          {user ? (\r\n            <NavbarText className=\"d-sm-none d-md-block\">\r\n              Welcome {user.displayName}\r\n            </NavbarText>\r\n          ) : null}\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\HomePage\\HomePageManager.js",["94"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { TabList, Tabs, Tab, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport CharacterSheet from \"../components/CharacterSheet\";\r\n\r\nconst HomePageManager = () => {\r\n  const { getCurrentUser, getToken } = useContext(UserProfileContext);\r\n  const [sheets, setSheets] = useState();\r\n  const [classes, setClasses] = useState([]);\r\n  const [sheetState, setSheetState] = useState(false);\r\n  const [sheetToEdit, setEditing] = useState({});\r\n  const user = getCurrentUser();\r\n\r\n  useEffect(() => {\r\n    getClasses()\r\n      .then(setClasses)\r\n      .then(getSheets)\r\n      .then((res) => {\r\n        ListSheets();\r\n      });\r\n  }, []);\r\n  useEffect(() => {}, [sheets]);\r\n\r\n  const getSheets = () => {\r\n    return getToken().then((token) => {\r\n      return fetch(`/api/CharacterSheet`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then(setSheets);\r\n    });\r\n  };\r\n  const getClasses = () => fetch(`/api/Classes`).then((res) => res.json());\r\n\r\n  // const RandomName = () => {\r\n  //   return fetch(\r\n  //     \"https://api.parser.name/?api_key=0e74eae57d4d7452eb110bd568342372&endpoint=generate\"\r\n  //   ).then((res) => res.json());\r\n  // };\r\n  const AddCharacter = () => {\r\n    return getToken().then((token) => {\r\n      return fetch(`/api/CharacterSheet`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          useProfileId: user.id,\r\n          name: \"Default\",\r\n          classId: 1,\r\n        }),\r\n      });\r\n    });\r\n  };\r\n\r\n  const ListSheets = () => {\r\n    console.log(sheets);\r\n    if (sheets === undefined) {\r\n      setSheetState(false);\r\n      return;\r\n    }\r\n    if (sheets[0] === undefined) {\r\n      setSheetState(false);\r\n      return;\r\n    }\r\n    setEditing(sheets[0]);\r\n    setSheetState(true);\r\n  };\r\n\r\n  while (sheets === undefined) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {sheetState ? (\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Tabs>\r\n                <TabList>\r\n                  {sheets.map((sheet) => {\r\n                    return (\r\n                      <Tab onClick={(e) => setEditing(sheet)} value={sheet.id}>\r\n                        {sheet.name}\r\n                      </Tab>\r\n                    );\r\n                  })}\r\n                </TabList>\r\n                {sheets.map((sheet) => {\r\n                  return (\r\n                    <TabPanel>\r\n                      <CharacterSheet\r\n                        key={sheet.id}\r\n                        sheet={sheet}\r\n                        setEditing={setEditing}\r\n                        sheetToEdit={sheetToEdit}\r\n                        getSheets={getSheets}\r\n                        classes={classes}\r\n                      />\r\n                    </TabPanel>\r\n                  );\r\n                })}\r\n                {sheets[3] === undefined ? (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={(e) => AddCharacter().then(getSheets)}\r\n                  >\r\n                    Add Character\r\n                  </Button>\r\n                ) : null}\r\n              </Tabs>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <>\r\n          {ListSheets()}\r\n          <h1>You currently have no character sheets!</h1>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={(e) => AddCharacter().then(getSheets)}\r\n          >\r\n            Add Character\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default HomePageManager;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\providers\\UserProfileProvider.js",["95"],"import React, { useState, useEffect, createContext } from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const UserProfileContext = createContext();\r\n\r\nexport function UserProfileProvider(props) {\r\n  const apiUrl = \"/api/userprofile\";\r\n\r\n  const userProfile = localStorage.getItem(\"userProfile\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\r\n\r\n  const [isFirebaseReady, setIsFirebaseReady] = useState(false);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((u) => {\r\n      setIsFirebaseReady(true);\r\n    });\r\n  }, []);\r\n\r\n  const login = (email, pw) => {\r\n    return firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, pw)\r\n      .then((signInResponse) => getUserProfile(signInResponse.user.uid))\r\n      .then((userProfile) => {\r\n        if (userProfile.UserStatusId == 2) {\r\n          console.log(\"this account is inactive\");\r\n        }\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(userProfile));\r\n        setIsLoggedIn(true);\r\n        return userProfile;\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    return firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        localStorage.clear();\r\n        setIsLoggedIn(false);\r\n      });\r\n  };\r\n\r\n  const register = (userProfile, password) => {\r\n    return firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(userProfile.email, password)\r\n      .then((createResponse) =>\r\n        saveUser({ ...userProfile, firebaseUserId: createResponse.user.uid })\r\n      )\r\n      .then((savedUserProfile) => {\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile));\r\n        setIsLoggedIn(true);\r\n        return savedUserProfile;\r\n      });\r\n  };\r\n\r\n  const getToken = () => firebase.auth().currentUser.getIdToken();\r\n\r\n  const getUserProfile = (firebaseUserId) => {\r\n    return getToken().then((token) =>\r\n      fetch(`${apiUrl}/${firebaseUserId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }).then((resp) => resp.json())\r\n    );\r\n  };\r\n\r\n  const saveUser = (userProfile) => {\r\n    return getToken().then((token) =>\r\n      fetch(apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userProfile),\r\n      }).then((resp) => resp.json())\r\n    );\r\n  };\r\n\r\n  const getCurrentUser = () => {\r\n    const user = localStorage.getItem(\"userProfile\");\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    return JSON.parse(user);\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    const user = getCurrentUser();\r\n    const adminTypeId = 1;\r\n    return user !== null && user.userTypeId === adminTypeId;\r\n  };\r\n\r\n  return (\r\n    <UserProfileContext.Provider\r\n      value={{\r\n        isLoggedIn,\r\n        login,\r\n        logout,\r\n        register,\r\n        getToken,\r\n        getCurrentUser,\r\n        isAdmin,\r\n      }}\r\n    >\r\n      {isFirebaseReady ? (\r\n        props.children\r\n      ) : (\r\n        <Spinner className=\"app-spinner dark\" />\r\n      )}\r\n    </UserProfileContext.Provider>\r\n  );\r\n}\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Login.js",["96"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  console.log(\"Login page reached!\");\r\n  const { login, logout } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    login(email, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        user.userStatusId == 2\r\n          ? toast.info(\"That account in inactive\", logout())\r\n          : toast.info(`Welcome back ${user.displayName}`, history.push(\"/\"));\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(\"Invalid email or password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"avatar bg-primary\">\r\n          <img src=\"/quill.png\" alt=\"Avatar\" />\r\n        </div>\r\n        <h2 className=\"text-center\">User Login</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n            Sign in\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Don't have an account?\r\n          <div>\r\n            <Link to=\"/register\">Sign up here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Register.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Attributes.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\CharacterSheet.js",["97","98"],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Skills.js",["99"],"import React, { useContext, useState } from \"react\";\r\nimport { Col, Input, Label, Row } from \"reactstrap\";\r\nimport { InformationDataContext } from \"../providers/InformationDataProvider\";\r\n\r\nconst Skills = ({ skill, handleChange, newSheet }) => {\r\n  const { setToggle } = useContext(InformationDataContext);\r\n\r\n  const [tempMods, setTempMods] = useState({\r\n    str: 0,\r\n    dex: 0,\r\n    con: 0,\r\n    int: 0,\r\n    wis: 0,\r\n    cha: 0,\r\n  });\r\n  const getName = (s) => {\r\n    if (s === \"Knowledge(Arcana)\") {\r\n      return \"knowledgeArcana\";\r\n    }\r\n    if (s === \"Knowledge(Dungeoneering)\") {\r\n      return \"knowledgeDungeoneering\";\r\n    }\r\n    if (s === \"Knowledge(Engineering)\") {\r\n      return \"knowledgeEngineering\";\r\n    }\r\n    if (s === \"Knowledge(Geography)\") {\r\n      return \"knowledgeGeography\";\r\n    }\r\n    if (s === \"Knowledge(History)\") {\r\n      return \"knowledgeHistory\";\r\n    }\r\n    if (s === \"Knowledge(Local)\") {\r\n      return \"knowledgeLocal\";\r\n    }\r\n    if (s === \"Knowledge(Nature)\") {\r\n      return \"knowledgeNature\";\r\n    }\r\n    if (s === \"Knowledge(Nobility)\") {\r\n      return \"knowledgeNobility\";\r\n    }\r\n    if (s === \"Knowledge(Planes)\") {\r\n      return \"knowledgePlanes\";\r\n    }\r\n    if (s === \"Knowledge(Religion)\") {\r\n      return \"knowledgeReligion\";\r\n    }\r\n    let string = s.replace(/\\s+/g, \"\");\r\n    return string[0].toLowerCase() + string.slice(1);\r\n  };\r\n\r\n  // const UpdateTemp = (skill = 0, e) => {\r\n  //   let dump = tempMods;\r\n  //   let value = parseInt(e.target.value);\r\n  //   if (stat === \"Strength\") {\r\n  //     if (isNaN(value)) {\r\n  //       dump.str = 0;\r\n  //     } else {\r\n  //       dump.str = parseInt(value);\r\n  //     }\r\n  //   }\r\n  //   if (stat === \"Dexterity\") {\r\n  //     dump.dex = value;\r\n  //     if (isNaN(value)) {\r\n  //       dump.dex = 0;\r\n  //     }\r\n  //   }\r\n  //   if (stat === \"Constitution\") {\r\n  //     dump.con = value;\r\n  //     if (isNaN(value)) {\r\n  //       dump.con = 0;\r\n  //     }\r\n  //   }\r\n  //   if (stat === \"Wisdom\") {\r\n  //     dump.wis = value;\r\n  //     if (isNaN(value)) {\r\n  //       dump.wis = 0;\r\n  //     }\r\n  //   }\r\n  //   if (stat === \"Intelligence\") {\r\n  //     dump.int = value;\r\n  //     if (isNaN(value)) {\r\n  //       dump.int = 0;\r\n  //     }\r\n  //   }\r\n  //   if (stat === \"Charisma\") {\r\n  //     dump.cha = value;\r\n  //     if (isNaN(value)) {\r\n  //       dump.cha = 0;\r\n  //     }\r\n  //   }\r\n  //   setTempMods(dump);\r\n  // };\r\n  const skillMath = (skill, temp = 0) => {\r\n    let result = newSheet[getName(skill)]\r\n      ? parseInt(newSheet[getName(skill)])\r\n      : 0;\r\n    if ([\"Climb\", \"Swim\"].includes(skill)) {\r\n      result += parseInt(newSheet.strMod);\r\n      return result;\r\n    }\r\n    if ([\"Profession\", \"Survival\"].includes(skill)) {\r\n      result += parseInt(newSheet.wisMod);\r\n      return result;\r\n    }\r\n    if (\r\n      [\r\n        \"Use Magic Device\",\r\n        \"Perform\",\r\n        \"Intimidate\",\r\n        \"Handle Animal\",\r\n        \"Bluff\",\r\n        \"Disguise\",\r\n      ].includes(skill)\r\n    ) {\r\n      result += parseInt(newSheet.chaMod);\r\n      return result;\r\n    }\r\n    if (\r\n      [\r\n        \"Appraise\",\r\n        \"Craft\",\r\n        \"Knowledge(Arcana)\",\r\n        \"Knowledge(Dungeoneering)\",\r\n        \"Knowledge(Engineering)\",\r\n        \"Knowledge(Geography)\",\r\n        \"Knowledge(History)\",\r\n        \"Knowledge(Local)\",\r\n        \"Knowledge(Nature)\",\r\n        \"Knowledge(Planes)\",\r\n        \"Knowledge(Religion)\",\r\n        \"Spellcraft\",\r\n      ].includes(skill)\r\n    ) {\r\n      result += parseInt(newSheet.intMod);\r\n      return result;\r\n    }\r\n    if (\r\n      [\r\n        \"Acrobatics\",\r\n        \"Disable Device\",\r\n        \"Escape Artist\",\r\n        \"Fly\",\r\n        \"Ride\",\r\n        \"Sleight Of Hand\",\r\n        \"Stealth\",\r\n      ].includes(skill)\r\n    ) {\r\n      result += parseInt(newSheet.dexMod);\r\n      return result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col md={{ offset: 2 }}>\r\n        <Row>\r\n          <Label\r\n            size=\"sm\"\r\n            md={2}\r\n            for={skill}\r\n            onClick={(e) => setToggle(getName(skill))}\r\n          >\r\n            {skill}\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              id={skill}\r\n              name={getName(skill)}\r\n              defaultValue={newSheet[getName(skill)]}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              value={skillMath(skill, parseInt(tempMods[getName(skill)]))}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\nexport default Skills;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Defense.js",["100"],"import React, { useContext, useState } from \"react\";\r\nimport { Col, Input, Label, Row } from \"reactstrap\";\r\nimport { InformationDataContext } from \"../providers/InformationDataProvider\";\r\n\r\nconst Defense = ({ handleChange, newSheet }) => {\r\n  const { setToggle } = useContext(InformationDataContext);\r\n  return (\r\n    <>\r\n      <Col sm={{ offset: 2 }}>\r\n        <Row>\r\n          <Label size=\"sm\" md={2} onClick={(e) => setToggle(\"AC\")}>\r\n            AC\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              value={\r\n                parseInt(newSheet.dexMod) + isNaN(parseInt(newSheet.ac))\r\n                  ? 0 + 10\r\n                  : parseInt(newSheet.ac) + 10\r\n              }\r\n            />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              type=\"number\"\r\n              defaultValue={0}\r\n              name=\"ac\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Col>\r\n          <Label size=\"sm\" md={2} for=\"touchAC\">\r\n            Touch\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              name=\"touchAC\"\r\n              value={10 + parseInt(newSheet.dexMod)}\r\n            />\r\n          </Col>\r\n          <Label size=\"sm\" md={2} for=\"flatFootAC\">\r\n            Flat-Footed\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              name=\"flatFootAC\"\r\n              value={\r\n                10 + isNaN(parseInt(newSheet.ac)) ? 0 : parseInt(newSheet.ac)\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Label size=\"sm\" md={2} for=\"fortSave\">\r\n            Fortitude\r\n          </Label>\r\n          <Col size=\"sm\" sm={1} name=\"fortSave\">\r\n            <Input defaultValue={newSheet.fortSave} />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              defaultValue={\r\n                isNaN(parseInt(newSheet.fortSave))\r\n                  ? 0 + parseInt(newSheet.conMod)\r\n                  : parseInt(newSheet.fortSave) + parseInt(newSheet.conMod)\r\n              }\r\n            />\r\n          </Col>\r\n          <Label size=\"sm\" md={2} for=\"refSave\">\r\n            Reflex\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input name=\"refSave\" defaultValue={newSheet.refSave} />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              defaultValue={\r\n                isNaN(parseInt(newSheet.refSave))\r\n                  ? 0 + parseInt(newSheet.dexMod)\r\n                  : parseInt(newSheet.refSave) + parseInt(newSheet.dexMod)\r\n              }\r\n            />\r\n          </Col>\r\n          <Label size=\"sm\" md={2} for=\"willSave\">\r\n            Will\r\n          </Label>\r\n          <Col size=\"sm\" sm={1} name=\"willSave\">\r\n            <Input name=\"flatFootAC\" defaultValue={newSheet.willSave} />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              defaultValue={\r\n                isNaN(parseInt(newSheet.willSave))\r\n                  ? 0 + parseInt(newSheet.wisMod)\r\n                  : parseInt(newSheet.willSave) + parseInt(newSheet.wisMod)\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\nexport default Defense;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Offense.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\InformationViews.js",["101","102","103","104"],"import React, { useContext, useState } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { InformationDataContext } from \"../providers/InformationDataProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Information from \"./AC\";\r\n\r\nconst InformationViews = () => {\r\n  const { isLoggedIn } = useContext(UserProfileContext);\r\n  const { isAdmin } = useContext(UserProfileContext);\r\n  const [dataArray, setDataArray] = useState(Information);\r\n  const { setToggle } = useContext(InformationDataContext);\r\n  const { toggle } = useContext(InformationDataContext);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {console.log(dataArray[toggle])}\r\n        <div style={{ textAlign: \"left\" }}>{dataArray[toggle]}</div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InformationViews;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\AC.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\providers\\InformationDataProvider.js",["105","106"],"import React, { useState, useEffect, createContext } from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nexport const InformationDataContext = createContext();\r\n\r\nexport function InformationDataProvider(props) {\r\n  const [toggle, setToggle] = useState(\"\");\r\n  return (\r\n    <InformationDataContext.Provider value={{ toggle, setToggle }}>\r\n      {props.children}\r\n    </InformationDataContext.Provider>\r\n  );\r\n}\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Feats.js",["107","108","109","110","111","112","113"],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Spells.js",["114","115","116","117","118","119","120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":8,"column":21,"nodeType":"127","messageId":"128","endLine":8,"endColumn":25},{"ruleId":"125","severity":1,"message":"129","line":10,"column":11,"nodeType":"127","messageId":"128","endLine":10,"endColumn":18},{"ruleId":"125","severity":1,"message":"129","line":17,"column":35,"nodeType":"127","messageId":"128","endLine":17,"endColumn":42},{"ruleId":"130","severity":1,"message":"131","line":23,"column":6,"nodeType":"132","endLine":23,"endColumn":8,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":27,"column":38,"nodeType":"136","messageId":"137","endLine":27,"endColumn":40},{"ruleId":"134","severity":1,"message":"135","line":23,"column":27,"nodeType":"136","messageId":"137","endLine":23,"endColumn":29},{"ruleId":"125","severity":1,"message":"138","line":12,"column":3,"nodeType":"127","messageId":"128","endLine":12,"endColumn":16},{"ruleId":"125","severity":1,"message":"139","line":30,"column":11,"nodeType":"127","messageId":"128","endLine":30,"endColumn":25},{"ruleId":"125","severity":1,"message":"140","line":8,"column":20,"nodeType":"127","messageId":"128","endLine":8,"endColumn":31},{"ruleId":"125","severity":1,"message":"141","line":1,"column":29,"nodeType":"127","messageId":"128","endLine":1,"endColumn":37},{"ruleId":"125","severity":1,"message":"142","line":8,"column":11,"nodeType":"127","messageId":"128","endLine":8,"endColumn":21},{"ruleId":"125","severity":1,"message":"129","line":9,"column":11,"nodeType":"127","messageId":"128","endLine":9,"endColumn":18},{"ruleId":"125","severity":1,"message":"143","line":10,"column":21,"nodeType":"127","messageId":"128","endLine":10,"endColumn":33},{"ruleId":"125","severity":1,"message":"144","line":11,"column":11,"nodeType":"127","messageId":"128","endLine":11,"endColumn":20},{"ruleId":"125","severity":1,"message":"145","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"146","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":17},{"ruleId":"125","severity":1,"message":"147","line":4,"column":3,"nodeType":"127","messageId":"128","endLine":4,"endColumn":6},{"ruleId":"125","severity":1,"message":"148","line":6,"column":3,"nodeType":"127","messageId":"128","endLine":6,"endColumn":8},{"ruleId":"125","severity":1,"message":"149","line":9,"column":3,"nodeType":"127","messageId":"128","endLine":9,"endColumn":14},{"ruleId":"125","severity":1,"message":"150","line":10,"column":3,"nodeType":"127","messageId":"128","endLine":10,"endColumn":6},{"ruleId":"125","severity":1,"message":"151","line":26,"column":9,"nodeType":"127","messageId":"128","endLine":26,"endColumn":22},{"ruleId":"134","severity":1,"message":"135","line":70,"column":29,"nodeType":"136","messageId":"137","endLine":70,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":98,"column":39,"nodeType":"136","messageId":"137","endLine":98,"endColumn":41},{"ruleId":"125","severity":1,"message":"147","line":4,"column":3,"nodeType":"127","messageId":"128","endLine":4,"endColumn":6},{"ruleId":"125","severity":1,"message":"148","line":6,"column":3,"nodeType":"127","messageId":"128","endLine":6,"endColumn":8},{"ruleId":"125","severity":1,"message":"149","line":9,"column":3,"nodeType":"127","messageId":"128","endLine":9,"endColumn":14},{"ruleId":"125","severity":1,"message":"150","line":10,"column":3,"nodeType":"127","messageId":"128","endLine":10,"endColumn":6},{"ruleId":"125","severity":1,"message":"152","line":26,"column":9,"nodeType":"127","messageId":"128","endLine":26,"endColumn":23},{"ruleId":"134","severity":1,"message":"135","line":69,"column":29,"nodeType":"136","messageId":"137","endLine":69,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":104,"column":40,"nodeType":"136","messageId":"137","endLine":104,"endColumn":42},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'Pane' is defined but never used.","Identifier","unusedVar","'isAdmin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ListSheets' and 'getSheets'. Either include them or remove the dependency array.","ArrayExpression",["155"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NavbarToggler' is defined but never used.","'getCurrentUser' is assigned a value but never used.","'setTempMods' is assigned a value but never used.","'useState' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'setDataArray' is assigned a value but never used.","'setToggle' is assigned a value but never used.","'useEffect' is defined but never used.","'Spinner' is defined but never used.","'Col' is defined but never used.","'Label' is defined but never used.","'ModalFooter' is defined but never used.","'Row' is defined but never used.","'GetSheetFeats' is assigned a value but never used.","'GetSheetSpells' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},"Update the dependencies array to be: [ListSheets, getSheets]",{"range":"158","text":"159"},[850,852],"[ListSheets, getSheets]"]
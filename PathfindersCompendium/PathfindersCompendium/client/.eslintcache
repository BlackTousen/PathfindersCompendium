[{"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\index.js":"1","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\App.js":"2","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\AppHeader.js":"5","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\HomePage\\HomePageManager.js":"6","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\providers\\UserProfileProvider.js":"7","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Login.js":"8","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Register.js":"9"},{"size":648,"mtime":1611953532484,"results":"10","hashOfConfig":"11"},{"size":664,"mtime":1611954408227,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":806,"mtime":1611953729976,"results":"14","hashOfConfig":"11"},{"size":2208,"mtime":1611954557064,"results":"15","hashOfConfig":"11"},{"size":1628,"mtime":1612215340159,"results":"16","hashOfConfig":"11"},{"size":3198,"mtime":1611951656420,"results":"17","hashOfConfig":"11"},{"size":2367,"mtime":1611953775672,"results":"18","hashOfConfig":"11"},{"size":3893,"mtime":1611951729693,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1jlz9gr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\index.js",[],["43","44"],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\App.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\ApplicationViews.js",["45"],"import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport HomePageManager from \"../HomePage/HomePageManager\";\r\nimport Login from \"../Pages/Login\";\r\nimport Register from \"../Pages/Register\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst ApplicationViews = () => {\r\n  const { isLoggedIn } = useContext(UserProfileContext);\r\n  const { isAdmin } = useContext(UserProfileContext);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        {isLoggedIn ? <HomePageManager /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ApplicationViews;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\AppHeader.js",["46"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Collapse,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarText,\r\n  NavbarToggler,\r\n  NavItem,\r\n} from \"reactstrap\";\r\n\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst AppHeader = () => {\r\n  const { getCurrentUser, logout, isAdmin } = useContext(UserProfileContext);\r\n  const user = getCurrentUser();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutAndReturn = () => {\r\n    return logout().then(() => {\r\n      toast.dark(\"You are now logged out\");\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          <img\r\n            id=\"header-logo\"\r\n            src=\"/quill.png\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"mr-1\"\r\n            alt=\"Quill Logo\"\r\n          />\r\n          PF Compendium\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {user ? (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink tag={Link} to=\"/\" onClick={logoutAndReturn}>\r\n                    Logout\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink to=\"/login\" tag={Link}>\r\n                    Login\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink to=\"/register\" tag={Link}>\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            )}\r\n          </Nav>\r\n          {user ? (\r\n            <NavbarText className=\"d-sm-none d-md-block\">\r\n              Welcome {user.displayName}\r\n            </NavbarText>\r\n          ) : null}\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\HomePage\\HomePageManager.js",["47","48"],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\providers\\UserProfileProvider.js",["49"],"import React, { useState, useEffect, createContext } from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const UserProfileContext = createContext();\r\n\r\nexport function UserProfileProvider(props) {\r\n  const apiUrl = \"/api/userprofile\";\r\n\r\n  const userProfile = localStorage.getItem(\"userProfile\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\r\n\r\n  const [isFirebaseReady, setIsFirebaseReady] = useState(false);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((u) => {\r\n      setIsFirebaseReady(true);\r\n    });\r\n  }, []);\r\n\r\n  const login = (email, pw) => {\r\n    return firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, pw)\r\n      .then((signInResponse) => getUserProfile(signInResponse.user.uid))\r\n      .then((userProfile) => {\r\n        if (userProfile.UserStatusId == 2) {\r\n          console.log(\"this account is inactive\");\r\n        }\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(userProfile));\r\n        setIsLoggedIn(true);\r\n        return userProfile;\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    return firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        localStorage.clear();\r\n        setIsLoggedIn(false);\r\n      });\r\n  };\r\n\r\n  const register = (userProfile, password) => {\r\n    return firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(userProfile.email, password)\r\n      .then((createResponse) =>\r\n        saveUser({ ...userProfile, firebaseUserId: createResponse.user.uid })\r\n      )\r\n      .then((savedUserProfile) => {\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile));\r\n        setIsLoggedIn(true);\r\n        return savedUserProfile;\r\n      });\r\n  };\r\n\r\n  const getToken = () => firebase.auth().currentUser.getIdToken();\r\n\r\n  const getUserProfile = (firebaseUserId) => {\r\n    return getToken().then((token) =>\r\n      fetch(`${apiUrl}/${firebaseUserId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }).then((resp) => resp.json())\r\n    );\r\n  };\r\n\r\n  const saveUser = (userProfile) => {\r\n    return getToken().then((token) =>\r\n      fetch(apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userProfile),\r\n      }).then((resp) => resp.json())\r\n    );\r\n  };\r\n\r\n  const getCurrentUser = () => {\r\n    const user = localStorage.getItem(\"userProfile\");\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    return JSON.parse(user);\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    const user = getCurrentUser();\r\n    const adminTypeId = 1;\r\n    return user !== null && user.userTypeId === adminTypeId;\r\n  };\r\n\r\n  return (\r\n    <UserProfileContext.Provider\r\n      value={{\r\n        isLoggedIn,\r\n        login,\r\n        logout,\r\n        register,\r\n        getToken,\r\n        getCurrentUser,\r\n        isAdmin,\r\n      }}\r\n    >\r\n      {isFirebaseReady ? (\r\n        props.children\r\n      ) : (\r\n        <Spinner className=\"app-spinner dark\" />\r\n      )}\r\n    </UserProfileContext.Provider>\r\n  );\r\n}\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Login.js",["50"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  console.log(\"Login page reached!\");\r\n  const { login, logout } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    login(email, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        user.userStatusId == 2\r\n          ? toast.info(\"That account in inactive\", logout())\r\n          : toast.info(`Welcome back ${user.displayName}`, history.push(\"/\"));\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(\"Invalid email or password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"avatar bg-primary\">\r\n          <img src=\"/quill.png\" alt=\"Avatar\" />\r\n        </div>\r\n        <h2 className=\"text-center\">User Login</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n            Sign in\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Don't have an account?\r\n          <div>\r\n            <Link to=\"/register\">Sign up here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Register.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":10,"column":11,"nodeType":"57","messageId":"58","endLine":10,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":17,"column":35,"nodeType":"57","messageId":"58","endLine":17,"endColumn":42},{"ruleId":"55","severity":1,"message":"59","line":6,"column":11,"nodeType":"57","messageId":"58","endLine":6,"endColumn":25},{"ruleId":"60","severity":1,"message":"61","line":12,"column":6,"nodeType":"62","endLine":12,"endColumn":8,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":27,"column":38,"nodeType":"66","messageId":"67","endLine":27,"endColumn":40},{"ruleId":"64","severity":1,"message":"65","line":23,"column":27,"nodeType":"66","messageId":"67","endLine":23,"endColumn":29},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'isAdmin' is assigned a value but never used.","Identifier","unusedVar","'getCurrentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSheets'. Either include it or remove the dependency array.","ArrayExpression",["70"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [getSheets]",{"range":"73","text":"74"},[457,459],"[getSheets]"]
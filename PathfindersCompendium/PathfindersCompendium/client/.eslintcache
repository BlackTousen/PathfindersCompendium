[{"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\index.js":"1","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\App.js":"2","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\AppHeader.js":"5","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\HomePage\\HomePageManager.js":"6","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\providers\\UserProfileProvider.js":"7","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Login.js":"8","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Register.js":"9","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Attributes.js":"10","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\CharacterSheet.js":"11","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Skills.js":"12","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Defense.js":"13","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Offense.js":"14"},{"size":648,"mtime":1611953532484,"results":"15","hashOfConfig":"16"},{"size":664,"mtime":1611954408227,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":806,"mtime":1611953729976,"results":"19","hashOfConfig":"16"},{"size":2208,"mtime":1611954557064,"results":"20","hashOfConfig":"16"},{"size":3934,"mtime":1612548283838,"results":"21","hashOfConfig":"16"},{"size":3198,"mtime":1611951656420,"results":"22","hashOfConfig":"16"},{"size":2367,"mtime":1611953775672,"results":"23","hashOfConfig":"16"},{"size":3893,"mtime":1611951729693,"results":"24","hashOfConfig":"16"},{"size":3089,"mtime":1612548283843,"results":"25","hashOfConfig":"16"},{"size":10928,"mtime":1612548283845,"results":"26","hashOfConfig":"16"},{"size":4387,"mtime":1612548283852,"results":"27","hashOfConfig":"16"},{"size":3241,"mtime":1612548283847,"results":"28","hashOfConfig":"16"},{"size":4652,"mtime":1612548283849,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jlz9gr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\index.js",[],["66","67"],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\App.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\ApplicationViews.js",["68"],"import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport HomePageManager from \"../HomePage/HomePageManager\";\r\nimport Login from \"../Pages/Login\";\r\nimport Register from \"../Pages/Register\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst ApplicationViews = () => {\r\n  const { isLoggedIn } = useContext(UserProfileContext);\r\n  const { isAdmin } = useContext(UserProfileContext);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        {isLoggedIn ? <HomePageManager /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ApplicationViews;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\AppHeader.js",["69"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Collapse,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarText,\r\n  NavbarToggler,\r\n  NavItem,\r\n} from \"reactstrap\";\r\n\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst AppHeader = () => {\r\n  const { getCurrentUser, logout, isAdmin } = useContext(UserProfileContext);\r\n  const user = getCurrentUser();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutAndReturn = () => {\r\n    return logout().then(() => {\r\n      toast.dark(\"You are now logged out\");\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          <img\r\n            id=\"header-logo\"\r\n            src=\"/quill.png\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"mr-1\"\r\n            alt=\"Quill Logo\"\r\n          />\r\n          PF Compendium\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {user ? (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink tag={Link} to=\"/\" onClick={logoutAndReturn}>\r\n                    Logout\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink to=\"/login\" tag={Link}>\r\n                    Login\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink to=\"/register\" tag={Link}>\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            )}\r\n          </Nav>\r\n          {user ? (\r\n            <NavbarText className=\"d-sm-none d-md-block\">\r\n              Welcome {user.displayName}\r\n            </NavbarText>\r\n          ) : null}\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\HomePage\\HomePageManager.js",["70"],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\providers\\UserProfileProvider.js",["71"],"import React, { useState, useEffect, createContext } from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const UserProfileContext = createContext();\r\n\r\nexport function UserProfileProvider(props) {\r\n  const apiUrl = \"/api/userprofile\";\r\n\r\n  const userProfile = localStorage.getItem(\"userProfile\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\r\n\r\n  const [isFirebaseReady, setIsFirebaseReady] = useState(false);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((u) => {\r\n      setIsFirebaseReady(true);\r\n    });\r\n  }, []);\r\n\r\n  const login = (email, pw) => {\r\n    return firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, pw)\r\n      .then((signInResponse) => getUserProfile(signInResponse.user.uid))\r\n      .then((userProfile) => {\r\n        if (userProfile.UserStatusId == 2) {\r\n          console.log(\"this account is inactive\");\r\n        }\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(userProfile));\r\n        setIsLoggedIn(true);\r\n        return userProfile;\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    return firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        localStorage.clear();\r\n        setIsLoggedIn(false);\r\n      });\r\n  };\r\n\r\n  const register = (userProfile, password) => {\r\n    return firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(userProfile.email, password)\r\n      .then((createResponse) =>\r\n        saveUser({ ...userProfile, firebaseUserId: createResponse.user.uid })\r\n      )\r\n      .then((savedUserProfile) => {\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile));\r\n        setIsLoggedIn(true);\r\n        return savedUserProfile;\r\n      });\r\n  };\r\n\r\n  const getToken = () => firebase.auth().currentUser.getIdToken();\r\n\r\n  const getUserProfile = (firebaseUserId) => {\r\n    return getToken().then((token) =>\r\n      fetch(`${apiUrl}/${firebaseUserId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }).then((resp) => resp.json())\r\n    );\r\n  };\r\n\r\n  const saveUser = (userProfile) => {\r\n    return getToken().then((token) =>\r\n      fetch(apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userProfile),\r\n      }).then((resp) => resp.json())\r\n    );\r\n  };\r\n\r\n  const getCurrentUser = () => {\r\n    const user = localStorage.getItem(\"userProfile\");\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    return JSON.parse(user);\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    const user = getCurrentUser();\r\n    const adminTypeId = 1;\r\n    return user !== null && user.userTypeId === adminTypeId;\r\n  };\r\n\r\n  return (\r\n    <UserProfileContext.Provider\r\n      value={{\r\n        isLoggedIn,\r\n        login,\r\n        logout,\r\n        register,\r\n        getToken,\r\n        getCurrentUser,\r\n        isAdmin,\r\n      }}\r\n    >\r\n      {isFirebaseReady ? (\r\n        props.children\r\n      ) : (\r\n        <Spinner className=\"app-spinner dark\" />\r\n      )}\r\n    </UserProfileContext.Provider>\r\n  );\r\n}\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Login.js",["72"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  console.log(\"Login page reached!\");\r\n  const { login, logout } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    login(email, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        user.userStatusId == 2\r\n          ? toast.info(\"That account in inactive\", logout())\r\n          : toast.info(`Welcome back ${user.displayName}`, history.push(\"/\"));\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(\"Invalid email or password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"avatar bg-primary\">\r\n          <img src=\"/quill.png\" alt=\"Avatar\" />\r\n        </div>\r\n        <h2 className=\"text-center\">User Login</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n            Sign in\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Don't have an account?\r\n          <div>\r\n            <Link to=\"/register\">Sign up here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\Pages\\Register.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Attributes.js",[],"C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\CharacterSheet.js",["73","74","75"],"import React, { useContext, useState } from \"react\";\r\nimport { TabPanel } from \"react-tabs\";\r\nimport { Row, Col, Button, Form, Label, Input, FormGroup } from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Attributes from \"./Attributes\";\r\nimport Defense from \"./Defense\";\r\nimport Offense from \"./Offense\";\r\nimport Skills from \"./Skills\";\r\n\r\nconst CharacterSheet = ({\r\n  sheet,\r\n  setEditing,\r\n  sheetToEdit,\r\n  getSheets,\r\n  classes,\r\n}) => {\r\n  const { getCurrentUser, getToken } = useContext(UserProfileContext);\r\n\r\n  const SaveCharacter = (sheet) => {\r\n    return getToken().then((token) => {\r\n      return fetch(`/api/CharacterSheet/${sheet.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(sheet),\r\n      });\r\n    });\r\n  };\r\n  const DeleteCharacter = (sheet) => {\r\n    console.log(sheet);\r\n    return getToken().then((token) => {\r\n      return fetch(`/api/CharacterSheet/${sheet.id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n    });\r\n  };\r\n  const handleChange = (e) => {\r\n    const newSheet = { ...sheetToEdit };\r\n    newSheet[e.target.name] = e.target.value;\r\n    setEditing(newSheet);\r\n  };\r\n\r\n  function compare(a, b) {\r\n    if (a.name < b.name) {\r\n      return -1;\r\n    }\r\n    if (a.name > b.name) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  const attributes = [\r\n    \"Strength\",\r\n    \"Dexterity\",\r\n    \"Constitution\",\r\n    \"Intelligence\",\r\n    \"Wisdom\",\r\n    \"Charisma\",\r\n  ];\r\n  const skills = [\r\n    \"Acrobatics\",\r\n    \"Appraise\",\r\n    \"Bluff\",\r\n    \"Climb\",\r\n    \"Craft\",\r\n    \"Diplomacy\",\r\n    \"Disable Device\",\r\n    \"Disguise\",\r\n    \"Escape Artist\",\r\n    \"Fly\",\r\n    \"Handle Animal\",\r\n    \"Heal\",\r\n    \"Intimidate\",\r\n    \"Knowledge(Arcana)\",\r\n    \"Knowledge(Dungeoneering)\",\r\n    \"Knowledge(Engineering)\",\r\n    \"Knowledge(Geography)\",\r\n    \"Knowledge(History)\",\r\n    \"Knowledge(Local)\",\r\n    \"Knowledge(Nature)\",\r\n    \"Knowledge(Nobility)\",\r\n    \"Knowledge(Planes)\",\r\n    \"Knowledge(Religion)\",\r\n    \"Linguistics\",\r\n    \"Perception\",\r\n    \"Perform\",\r\n    \"Profession\",\r\n    \"Ride\",\r\n    \"Sense Motive\",\r\n    \"Sleight Of Hand\",\r\n    \"Spellcraft\",\r\n    \"Stealth\",\r\n    \"Survival\",\r\n    \"Swim\",\r\n    \"Use Magic Device\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Row>\r\n          <Col></Col>\r\n          <Col sm={6}>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col sm={6}>\r\n                  <Label size=\"sm\" for=\"name\">\r\n                    Character Name:\r\n                  </Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    defaultValue={sheet.name}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col sm={6}>\r\n                  <Label size=\"sm\" for=\"alignment\">\r\n                    Alignment:\r\n                  </Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"alignment\"\r\n                    defaultValue={sheet.alignment}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={4}>\r\n                  <Label for=\"class\">Class:</Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"select\"\r\n                    name=\"classId\"\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  >\r\n                    <option disabled hidden value={0}>\r\n                      Please select a class\r\n                    </option>\r\n                    {classes.sort(compare).map((c) => (\r\n                      <option value={c.id} selected={c.id === sheet.classId}>\r\n                        {c.name}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <Label for=\"level\">Level:</Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"level\"\r\n                    defaultValue={sheet.level}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <Label for=\"deity\">Deity:</Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"deity\"\r\n                    defaultValue={sheet.deity}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col sm={4}>\r\n                  <Label for=\"homeland\">Homeland:</Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"homeland\"\r\n                    defaultValue={sheet.homeland}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={3}>\r\n                  <Label for=\"race\">Race:</Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"race\"\r\n                    defaultValue={sheet.race}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col sm={3}>\r\n                  <Label for=\"size\">Size:</Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"size\"\r\n                    defaultValue={sheet.size}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col sm={3}>\r\n                  <Label for=\"gender\">Gender:</Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"gender\"\r\n                    defaultValue={sheet.gender}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col sm={3}>\r\n                  <Label for=\"age\">Age:</Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"age\"\r\n                    defaultValue={sheet.age}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col sm={3}>\r\n                  <Label for=\"height\">Height:</Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"height\"\r\n                    defaultValue={sheet.height}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col sm={3}>\r\n                  <Label for=\"weight\">Weight:</Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"weight\"\r\n                    defaultValue={sheet.weight}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col sm={3}>\r\n                  <Label for=\"hair\">Hair:</Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"hair\"\r\n                    defaultValue={sheet.hair}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col sm={3}>\r\n                  <Label for=\"eyes\">Eyes:</Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"eyes\"\r\n                    defaultValue={sheet.eyes}\r\n                    onChange={(e) => {\r\n                      e.preventDefault();\r\n                      handleChange(e);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Defense handleChange={handleChange} newSheet={sheetToEdit} />\r\n        <Offense handleChange={handleChange} newSheet={sheetToEdit} />\r\n        <FormGroup>\r\n          {attributes.map((att) => {\r\n            return (\r\n              <Attributes\r\n                key={att}\r\n                attribute={att}\r\n                handleChange={handleChange}\r\n                newSheet={sheetToEdit}\r\n              />\r\n            );\r\n          })}\r\n        </FormGroup>\r\n        <FormGroup>\r\n          {skills.map((att) => {\r\n            return (\r\n              <Skills\r\n                key={att}\r\n                skill={att}\r\n                handleChange={handleChange}\r\n                newSheet={sheetToEdit}\r\n              />\r\n            );\r\n          })}\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Row>\r\n            Speed:\r\n            <Col md={2}>Land: {sheet.landSpeed}</Col>\r\n            <Col md={2}>Run: {sheet.landSpeed * 4}</Col>\r\n            <Col md={2}>Swim: {sheet.swimSpeed}</Col>\r\n            <Col md={2}>Climb: {sheet.climbSpeed}</Col>\r\n            <Col md={2}>Fly: {sheet.flySpeed}</Col>\r\n          </Row>\r\n        </FormGroup>\r\n        <Button onClick={(e) => SaveCharacter(sheetToEdit).then(getSheets)}>\r\n          Save Changes\r\n        </Button>\r\n        <Button onClick={(e) => DeleteCharacter(sheetToEdit).then(getSheets)}>\r\n          Delete Character\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default CharacterSheet;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Skills.js",["76"],"import React, { useState } from \"react\";\r\nimport { Col, Input, Label, Row } from \"reactstrap\";\r\n\r\nconst Skills = ({ skill, handleChange, newSheet }) => {\r\n  const [tempMods, setTempMods] = useState({\r\n    str: 0,\r\n    dex: 0,\r\n    con: 0,\r\n    int: 0,\r\n    wis: 0,\r\n    cha: 0,\r\n  });\r\n  const getName = (s) => {\r\n    if (s === \"Knowledge(Arcana)\") {\r\n      return \"knowledgeArcana\";\r\n    }\r\n    if (s === \"Knowledge(Dungeoneering)\") {\r\n      return \"knowledgeDungeoneering\";\r\n    }\r\n    if (s === \"Knowledge(Engineering)\") {\r\n      return \"knowledgeEngineering\";\r\n    }\r\n    if (s === \"Knowledge(Geography)\") {\r\n      return \"knowledgeGeography\";\r\n    }\r\n    if (s === \"Knowledge(History)\") {\r\n      return \"knowledgeHistory\";\r\n    }\r\n    if (s === \"Knowledge(Local)\") {\r\n      return \"knowledgeLocal\";\r\n    }\r\n    if (s === \"Knowledge(Nature)\") {\r\n      return \"knowledgeNature\";\r\n    }\r\n    if (s === \"Knowledge(Nobility)\") {\r\n      return \"knowledgeNobility\";\r\n    }\r\n    if (s === \"Knowledge(Planes)\") {\r\n      return \"knowledgePlanes\";\r\n    }\r\n    if (s === \"Knowledge(Religion)\") {\r\n      return \"knowledgeReligion\";\r\n    }\r\n    let string = s.replace(/\\s+/g, \"\");\r\n    return string[0].toLowerCase() + string.slice(1);\r\n  };\r\n\r\n  // const UpdateTemp = (skill = 0, e) => {\r\n  //   let dump = tempMods;\r\n  //   let value = parseInt(e.target.value);\r\n  //   if (stat === \"Strength\") {\r\n  //     if (isNaN(value)) {\r\n  //       dump.str = 0;\r\n  //     } else {\r\n  //       dump.str = parseInt(value);\r\n  //     }\r\n  //   }\r\n  //   if (stat === \"Dexterity\") {\r\n  //     dump.dex = value;\r\n  //     if (isNaN(value)) {\r\n  //       dump.dex = 0;\r\n  //     }\r\n  //   }\r\n  //   if (stat === \"Constitution\") {\r\n  //     dump.con = value;\r\n  //     if (isNaN(value)) {\r\n  //       dump.con = 0;\r\n  //     }\r\n  //   }\r\n  //   if (stat === \"Wisdom\") {\r\n  //     dump.wis = value;\r\n  //     if (isNaN(value)) {\r\n  //       dump.wis = 0;\r\n  //     }\r\n  //   }\r\n  //   if (stat === \"Intelligence\") {\r\n  //     dump.int = value;\r\n  //     if (isNaN(value)) {\r\n  //       dump.int = 0;\r\n  //     }\r\n  //   }\r\n  //   if (stat === \"Charisma\") {\r\n  //     dump.cha = value;\r\n  //     if (isNaN(value)) {\r\n  //       dump.cha = 0;\r\n  //     }\r\n  //   }\r\n  //   setTempMods(dump);\r\n  // };\r\n  const skillMath = (skill, temp = 0) => {\r\n    let result = newSheet[getName(skill)]\r\n      ? parseInt(newSheet[getName(skill)])\r\n      : 0;\r\n    if ([\"Climb\", \"Swim\"].includes(skill)) {\r\n      result += parseInt(newSheet.strMod);\r\n      return result;\r\n    }\r\n    if ([\"Profession\", \"Survival\"].includes(skill)) {\r\n      result += parseInt(newSheet.wisMod);\r\n      return result;\r\n    }\r\n    if (\r\n      [\r\n        \"Use Magic Device\",\r\n        \"Perform\",\r\n        \"Intimidate\",\r\n        \"Handle Animal\",\r\n        \"Bluff\",\r\n        \"Disguise\",\r\n      ].includes(skill)\r\n    ) {\r\n      result += parseInt(newSheet.chaMod);\r\n      return result;\r\n    }\r\n    if (\r\n      [\r\n        \"Appraise\",\r\n        \"Craft\",\r\n        \"Knowledge(Arcana)\",\r\n        \"Knowledge(Dungeoneering)\",\r\n        \"Knowledge(Engineering)\",\r\n        \"Knowledge(Geography)\",\r\n        \"Knowledge(History)\",\r\n        \"Knowledge(Local)\",\r\n        \"Knowledge(Nature)\",\r\n        \"Knowledge(Planes)\",\r\n        \"Knowledge(Religion)\",\r\n        \"Spellcraft\",\r\n      ].includes(skill)\r\n    ) {\r\n      result += parseInt(newSheet.intMod);\r\n      return result;\r\n    }\r\n    if (\r\n      [\r\n        \"Acrobatics\",\r\n        \"Disable Device\",\r\n        \"Escape Artist\",\r\n        \"Fly\",\r\n        \"Ride\",\r\n        \"Sleight Of Hand\",\r\n        \"Stealth\",\r\n      ].includes(skill)\r\n    ) {\r\n      result += parseInt(newSheet.dexMod);\r\n      return result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col md={{ offset: 2 }}>\r\n        <Row>\r\n          <Label size=\"sm\" md={2} for={skill}>\r\n            {skill}\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              id={skill}\r\n              name={getName(skill)}\r\n              defaultValue={newSheet[getName(skill)]}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              value={skillMath(skill, parseInt(tempMods[getName(skill)]))}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\nexport default Skills;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Defense.js",["77"],"import React, { useState } from \"react\";\r\nimport { Col, Input, Label, Row } from \"reactstrap\";\r\n\r\nconst Defense = ({ handleChange, newSheet }) => {\r\n  return (\r\n    <>\r\n      <Col sm={{ offset: 2 }}>\r\n        <Row>\r\n          <Label size=\"sm\" md={2}>\r\n            AC\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              value={\r\n                parseInt(newSheet.dexMod) + isNaN(parseInt(newSheet.ac))\r\n                  ? 0 + 10\r\n                  : parseInt(newSheet.ac) + 10\r\n              }\r\n            />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              type=\"number\"\r\n              defaultValue={0}\r\n              name=\"ac\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Col>\r\n          <Label size=\"sm\" md={2} for=\"touchAC\">\r\n            Touch\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              name=\"touchAC\"\r\n              value={10 + parseInt(newSheet.dexMod)}\r\n            />\r\n          </Col>\r\n          <Label size=\"sm\" md={2} for=\"flatFootAC\">\r\n            Flat-Footed\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              name=\"flatFootAC\"\r\n              value={\r\n                10 + isNaN(parseInt(newSheet.ac)) ? 0 : parseInt(newSheet.ac)\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Label size=\"sm\" md={2} for=\"fortSave\">\r\n            Fortitude\r\n          </Label>\r\n          <Col size=\"sm\" sm={1} name=\"fortSave\">\r\n            <Input defaultValue={newSheet.fortSave} />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              defaultValue={\r\n                isNaN(parseInt(newSheet.fortSave))\r\n                  ? 0 + parseInt(newSheet.conMod)\r\n                  : parseInt(newSheet.fortSave) + parseInt(newSheet.conMod)\r\n              }\r\n            />\r\n          </Col>\r\n          <Label size=\"sm\" md={2} for=\"refSave\">\r\n            Reflex\r\n          </Label>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input name=\"refSave\" defaultValue={newSheet.refSave} />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              defaultValue={\r\n                isNaN(parseInt(newSheet.refSave))\r\n                  ? 0 + parseInt(newSheet.dexMod)\r\n                  : parseInt(newSheet.refSave) + parseInt(newSheet.dexMod)\r\n              }\r\n            />\r\n          </Col>\r\n          <Label size=\"sm\" md={2} for=\"willSave\">\r\n            Will\r\n          </Label>\r\n          <Col size=\"sm\" sm={1} name=\"willSave\">\r\n            <Input name=\"flatFootAC\" defaultValue={newSheet.willSave} />\r\n          </Col>\r\n          <Col size=\"sm\" sm={1}>\r\n            <Input\r\n              readOnly\r\n              defaultValue={\r\n                isNaN(parseInt(newSheet.willSave))\r\n                  ? 0 + parseInt(newSheet.wisMod)\r\n                  : parseInt(newSheet.willSave) + parseInt(newSheet.wisMod)\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\nexport default Defense;\r\n","C:\\Users\\Jerry\\workspace\\CharacterSheet\\PathfindersCompendium\\PathfindersCompendium\\client\\src\\components\\Offense.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":10,"column":11,"nodeType":"84","messageId":"85","endLine":10,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":17,"column":35,"nodeType":"84","messageId":"85","endLine":17,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":23,"column":6,"nodeType":"88","endLine":23,"endColumn":8,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":27,"column":38,"nodeType":"92","messageId":"93","endLine":27,"endColumn":40},{"ruleId":"90","severity":1,"message":"91","line":23,"column":27,"nodeType":"92","messageId":"93","endLine":23,"endColumn":29},{"ruleId":"82","severity":1,"message":"94","line":1,"column":29,"nodeType":"84","messageId":"85","endLine":1,"endColumn":37},{"ruleId":"82","severity":1,"message":"95","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":18},{"ruleId":"82","severity":1,"message":"96","line":17,"column":11,"nodeType":"84","messageId":"85","endLine":17,"endColumn":25},{"ruleId":"82","severity":1,"message":"97","line":5,"column":20,"nodeType":"84","messageId":"85","endLine":5,"endColumn":31},{"ruleId":"82","severity":1,"message":"94","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'isAdmin' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ListSheets' and 'getSheets'. Either include them or remove the dependency array.","ArrayExpression",["100"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'TabPanel' is defined but never used.","'getCurrentUser' is assigned a value but never used.","'setTempMods' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [ListSheets, getSheets]",{"range":"103","text":"104"},[850,852],"[ListSheets, getSheets]"]